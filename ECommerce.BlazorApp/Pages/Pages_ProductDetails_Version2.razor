@page "/productdetails/{id:int}"
@inject HttpClient Http

<style>
	.product-container {
		max-width: 800px;
		margin: 50px auto;
		padding: 20px;
	}

	.loading {
		text-align: center;
		padding: 50px;
		color: #666;
		font-size: 1.2rem;
	}

	.spinner {
		border: 6px solid #f3f3f3;
		border-top: 6px solid #3498db;
		border-radius: 50%;
		width: 50px;
		height: 50px;
		animation: spin 1s linear infinite;
		margin: auto;
	}



	.product-card {
		background: white;
		border-radius: 15px;
		box-shadow: 0 5px 20px rgba(0,0,0,0.1);
		overflow: hidden;
		animation: fadeIn 0.5s ease-in-out;
	}



	.product-image {
		width: 100%;
		height: 300px;
		object-fit: cover;
		display: block;
	}

	.product-body {
		padding: 20px;
	}

	.product-title {
		font-size: 1.8rem;
		font-weight: bold;
		color: #2c3e50;
		margin-bottom: 10px;
	}

	.product-description {
		font-size: 1rem;
		color: #555;
		margin-bottom: 20px;
		line-height: 1.6;
	}

	.product-price {
		font-size: 1.5rem;
		color: #27ae60;
		font-weight: bold;
		margin-bottom: 20px;
	}

	.btn-cart {
		display: inline-block;
		background: linear-gradient(135deg, #27ae60, #2ecc71);
		color: white;
		padding: 12px 20px;
		border: none;
		border-radius: 50px;
		font-size: 1rem;
		cursor: pointer;
		transition: transform 0.2s ease, background 0.3s ease;
	}

		.btn-cart:hover {
			transform: scale(1.05);
			background: linear-gradient(135deg, #219150, #27ae60);
		}
</style>

<div class="product-container">
	@if (product == null)
	{
		<div class="loading">
			<div class="spinner"></div>
			<p class="mt-3">جاري تحميل تفاصيل المنتج...</p>
		</div>
	}
	else
	{
		<div class="product-card">
			@if (!string.IsNullOrEmpty(product.Image))
			{
				<img src="data:image/jpeg;base64,@product.Image" alt="@product.Name" class="product-image" />
			}
			<div class="product-body">
				<h2 class="product-title">@product.Name</h2>
				<p class="product-description">@product.Description</p>
				<div class="product-price">@product.Price.ToString("C")</div>
				<button class="btn-cart" @onclick="AddToCart">
					🛒 إضافة للسلة
				</button>
			</div>
		</div>
	}
</div>

@code {
	[Parameter] public int id { get; set; }
	ProductDto product;

	protected override async Task OnInitializedAsync()
	{
		// جلب الاستجابة الكاملة
		var response = await Http.GetFromJsonAsync<ApiResponse<ProductDto>>($"api/products/{id}");

		// لو نجح الطلب خزن البيانات
		if (response != null && response.Success)
		{
			product = response.Data;
		}
	}

	void AddToCart()
	{
		// منطق إضافة المنتج للسلة
	}

	// شكل الاستجابة من API
	public class ApiResponse<T>
	{
		public bool Success { get; set; }
		public string Massage { get; set; }
		public T Data { get; set; }
		public string Error { get; set; }
	}

	// بيانات المنتج
	public class ProductDto
	{
		public int Id { get; set; }
		public string Name { get; set; }
		public string Description { get; set; }
		public decimal Price { get; set; }
		public string Image { get; set; } // Base64 image
	}
}
